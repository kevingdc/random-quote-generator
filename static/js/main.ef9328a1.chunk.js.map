{"version":3,"sources":["components/Quote.js","components/NewQuoteButton.js","components/SocialAnchor.js","components/QuoteBox.js","containers/App.js","utils/reportWebVitals.js","index.js","api/quoteHelper.js"],"names":["Quote","props","className","id","quote","author","NewQuoteButton","onClick","SocialAnchor","href","children","QuoteBox","state","fetchQuote","bind","this","quoteHelper","then","res","setState","content","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports","fetch","json"],"mappings":"yQAaeA,EAbD,SAAAC,GACZ,OACE,sBAAKC,UAAU,0BAAf,UACE,qBAAKC,GAAG,OAAOD,UAAU,+BAAzB,SACGD,EAAMG,QAET,qBAAKD,GAAG,SAASD,UAAU,6BAA3B,SACGD,EAAMI,aCKAC,EAZQ,SAAAL,GACrB,OACE,wBACEE,GAAG,YACHD,UAAU,+EACVK,QAASN,EAAMM,QAHjB,0BCUWC,EAZM,SAAAP,GACnB,OACE,mBACEE,GAAIF,EAAME,GACVD,UAAU,+EACVO,KAAMR,EAAMQ,KAHd,SAKGR,EAAMS,YC2CEC,E,kDA5Cb,WAAYV,GAAQ,IAAD,8BACjB,cAAMA,IAEDW,MAAQ,CACXR,MAAO,GACPC,OAAQ,IAGV,EAAKQ,WAAa,EAAKA,WAAWC,KAAhB,gBARD,E,qDAWnB,WAAqB,IAAD,EACQC,KAAKH,MAAvBR,EADU,EACVA,MAAOC,EADG,EACHA,OAEXD,GAASC,GAEbU,KAAKF,e,wBAGP,WAAc,IAAD,OACXG,IAAYH,aAAaI,MAAK,SAAAC,GAC5B,EAAKC,SAAS,CAAEf,MAAOc,EAAIE,QAASf,OAAQa,EAAIb,c,oBAIpD,WAAU,IAAD,EACmBU,KAAKH,MAAvBR,EADD,EACCA,MAAOC,EADR,EACQA,OACf,OACE,sBACEF,GAAG,YACHD,UAAU,qGAFZ,UAIE,cAAC,EAAD,CAAOE,MAAOA,EAAOC,OAAQA,IAC7B,sBAAKH,UAAU,mBAAf,UACE,cAAC,EAAD,CAAcC,GAAG,cAAcM,KAAK,2BAApC,mBAGA,cAAC,EAAD,CAAgBF,QAASQ,KAAKF,uB,GAtCjBQ,IAAMC,WCKdC,EARH,WACV,OACE,qBAAKrB,UAAU,iGAAf,SACE,cAAC,EAAD,OCOSsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K,gBCdAa,EAAOC,QAAQzB,WAAa,WAC1B,OAAO0B,MAAM,GAAD,OAHF,0BAGE,YAAkBtB,MAAK,SAAAC,GAAG,OAAIA,EAAIsB,a","file":"static/js/main.ef9328a1.chunk.js","sourcesContent":["const Quote = props => {\n  return (\n    <div className=\"flex flex-col space-y-4\">\n      <div id=\"text\" className=\"text-3xl text-center block m\">\n        {props.quote}\n      </div>\n      <div id=\"author\" className=\"text-right text-opacity-30\">\n        {props.author}\n      </div>\n    </div>\n  );\n};\n\nexport default Quote;\n","const NewQuoteButton = props => {\n  return (\n    <button\n      id=\"new-quote\"\n      className=\"shadow rounded-md bg-gray-600 text-white p-2 hover:bg-black justify-self-end\"\n      onClick={props.onClick}\n    >\n      More wisdom\n    </button>\n  );\n};\n\nexport default NewQuoteButton;\n","const SocialAnchor = props => {\n  return (\n    <a\n      id={props.id}\n      className=\"shadow rounded-md bg-gray-600 text-white p-2 hover:bg-black justify-self-end\"\n      href={props.href}\n    >\n      {props.children}\n    </a>\n  );\n};\n\nexport default SocialAnchor;\n","import React from \"react\";\nimport quoteHelper from \"../api/quoteHelper.js\";\nimport Quote from \"./Quote.js\";\nimport NewQuoteButton from \"./NewQuoteButton.js\";\nimport SocialAnchor from \"./SocialAnchor.js\";\nclass QuoteBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      quote: \"\",\n      author: \"\",\n    };\n\n    this.fetchQuote = this.fetchQuote.bind(this);\n  }\n\n  componentDidMount() {\n    const { quote, author } = this.state;\n\n    if (quote && author) return;\n\n    this.fetchQuote();\n  }\n\n  fetchQuote() {\n    quoteHelper.fetchQuote().then(res => {\n      this.setState({ quote: res.content, author: res.author });\n    });\n  }\n\n  render() {\n    const { quote, author } = this.state;\n    return (\n      <div\n        id=\"quote-box\"\n        className=\"w-1/2 flex-shrink flex flex-col space-y-10 shadow-md rounded-md bg-white border-white border-2 p-6\"\n      >\n        <Quote quote={quote} author={author} />\n        <div className=\"flex justify-end\">\n          <SocialAnchor id=\"tweet-quote\" href=\"twitter.com/intent/tweet\">\n            Tweet\n          </SocialAnchor>\n          <NewQuoteButton onClick={this.fetchQuote} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default QuoteBox;\n","import QuoteBox from \"../components/QuoteBox.js\";\n\nconst App = () => {\n  return (\n    <div className=\"flex flex-col h-screen justify-center items-center bg-gradient-to-br from-gray-100 to-gray-500\">\n      <QuoteBox />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./containers/App.js\";\nimport reportWebVitals from \"./utils/reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const url = \"https://api.quotable.io\";\n\nmodule.exports.fetchQuote = () => {\n  return fetch(`${url}/random`).then(res => res.json());\n};\n"],"sourceRoot":""}